ExeStack:
ref(int) v;
new(v,20);
ref(ref(int)) v1;
new(v1,v);
ref(ref(ref(int))) v2;
new(v2,v1);
new(v,30);
int v3;
print(*(v));
SymTable:
Out:
FileTable:
Heap:
{}

ExeStack:
ref(int) v;
new(v,20);
ref(ref(int)) v1;
new(v1,v);
ref(ref(ref(int))) v2;
new(v2,v1);
new(v,30);
int v3;
print(*(v));
SymTable:
Out:
FileTable:
Heap:
{}

ExeStack:
new(v,20);
ref(ref(int)) v1;
new(v1,v);
ref(ref(ref(int))) v2;
new(v2,v1);
new(v,30);
int v3;
print(*(v));
SymTable:
v --> (0,int)
Out:
FileTable:
Heap:
{}

ExeStack:
new(v,20);
ref(ref(int)) v1;
new(v1,v);
ref(ref(ref(int))) v2;
new(v2,v1);
new(v,30);
int v3;
print(*(v));
SymTable:
v --> (0,int)
Out:
FileTable:
Heap:
{}

ExeStack:
ref(ref(int)) v1;
new(v1,v);
ref(ref(ref(int))) v2;
new(v2,v1);
new(v,30);
int v3;
print(*(v));
SymTable:
v --> (1,int)
Out:
FileTable:
Heap:
{1=20}

ExeStack:
ref(ref(int)) v1;
new(v1,v);
ref(ref(ref(int))) v2;
new(v2,v1);
new(v,30);
int v3;
print(*(v));
SymTable:
v --> (1,int)
Out:
FileTable:
Heap:
{1=20}

ExeStack:
new(v1,v);
ref(ref(ref(int))) v2;
new(v2,v1);
new(v,30);
int v3;
print(*(v));
SymTable:
v --> (1,int)
v1 --> (0,ref(int))
Out:
FileTable:
Heap:
{1=20}

ExeStack:
new(v1,v);
ref(ref(ref(int))) v2;
new(v2,v1);
new(v,30);
int v3;
print(*(v));
SymTable:
v --> (1,int)
v1 --> (0,ref(int))
Out:
FileTable:
Heap:
{1=20}

ExeStack:
ref(ref(ref(int))) v2;
new(v2,v1);
new(v,30);
int v3;
print(*(v));
SymTable:
v --> (1,int)
v1 --> (2,ref(int))
Out:
FileTable:
Heap:
{1=20, 2=(1,int)}

ExeStack:
ref(ref(ref(int))) v2;
new(v2,v1);
new(v,30);
int v3;
print(*(v));
SymTable:
v --> (1,int)
v1 --> (2,ref(int))
Out:
FileTable:
Heap:
{1=20, 2=(1,int)}

ExeStack:
new(v2,v1);
new(v,30);
int v3;
print(*(v));
SymTable:
v --> (1,int)
v1 --> (2,ref(int))
v2 --> (0,ref(ref(int)))
Out:
FileTable:
Heap:
{1=20, 2=(1,int)}

ExeStack:
new(v2,v1);
new(v,30);
int v3;
print(*(v));
SymTable:
v --> (1,int)
v1 --> (2,ref(int))
v2 --> (0,ref(ref(int)))
Out:
FileTable:
Heap:
{1=20, 2=(1,int)}

ExeStack:
new(v,30);
int v3;
print(*(v));
SymTable:
v --> (1,int)
v1 --> (2,ref(int))
v2 --> (3,ref(ref(int)))
Out:
FileTable:
Heap:
{1=20, 2=(1,int), 3=(2,ref(int))}

ExeStack:
new(v,30);
int v3;
print(*(v));
SymTable:
v --> (1,int)
v1 --> (2,ref(int))
v2 --> (3,ref(ref(int)))
Out:
FileTable:
Heap:
{1=20, 2=(1,int), 3=(2,ref(int))}

ExeStack:
int v3;
print(*(v));
SymTable:
v --> (4,int)
v1 --> (2,ref(int))
v2 --> (3,ref(ref(int)))
Out:
FileTable:
Heap:
{1=20, 2=(1,int), 3=(2,ref(int)), 4=30}

ExeStack:
int v3;
print(*(v));
SymTable:
v --> (4,int)
v1 --> (2,ref(int))
v2 --> (3,ref(ref(int)))
Out:
FileTable:
Heap:
{1=20, 2=(1,int), 3=(2,ref(int)), 4=30}

ExeStack:
print(*(v));
SymTable:
v --> (4,int)
v1 --> (2,ref(int))
v2 --> (3,ref(ref(int)))
v3 --> 0
Out:
FileTable:
Heap:
{1=20, 2=(1,int), 3=(2,ref(int)), 4=30}

ExeStack:
SymTable:
v --> (4,int)
v1 --> (2,ref(int))
v2 --> (3,ref(ref(int)))
v3 --> 0
Out:
30
FileTable:
Heap:
{1=20, 2=(1,int), 3=(2,ref(int)), 4=30}

